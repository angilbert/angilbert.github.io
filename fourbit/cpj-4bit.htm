<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1">
    <title>Clickmazes</title>
    <link rel="stylesheet" href="../style2020.css?v=1.3">
    <script src="https://cjrtnc.leaningtech.com/2.1/loader.js"></script>
    <script>cheerpjInit();</script>  
  </head>
  <body>

    <div class="sidenav">
      <img src="../_site/site_cornersmall.gif">
      <p>
        <img src="../_site/logo_white.png" height="250px">
        <a href="../index.htm">home</a>
        <a href="../new-indexo.htm">oskar</a>
        <a href="../new-faq.htm">help</a>
      </p>
    </div>

    <div class="mainbody">
      <div class="page-intro">
        <h2>Oskar's Four-bit mazes</h2><p>
          Welcome to the Four-bit mazes by Oskar van Deventer.
          All these mazes use just four binary bits to create a sixteen-state
          maze, yet some mazes are very easy and some very difficult depending
          on what <i>rule</i> was used during maze construction. Oskar
          designed many four-bit mazes using different rules, and nine
          of these mazes are offered in interactive form below.
        </p>
      </div>
      <div>
        <p>
          Details of all rules are listed at the bottom of this page,
          but can you work out each rule without seeing it? And does actually
          knowing the rule make the challenge any easier? (the name of
          each maze may give you a hint). 
        </p>
        <!-- <p>The Four-bit mazes are closely related to my early 
          <a href="new-t00.htm">HTML maze</a>.</p> -->
      </div>

      <div class="std-flex-block">
        <div class="puzzle-area">
          <p><img src="opic.jpg" width="295"></p>
          <p><cheerpj-applet archive="new-fourbit.jar" 
            code="fourbit.class" width="150" height="30">
            <param name="titles" value="
              All OK, Wrong move reset, PIN code, 
              Memory, Deeper & deeper, Four-bit maze, 
              No sense, Karnaugh, One way street">
            <param name="mazes" value="
            1248:0359:306a:217b:560c:471d:742e:653f:9ac0:8bd1:b8e2:a9f3:de84:cf95:fca6:xxxx:,
            0008:x000:0x00:xx00:00x0:x0x0:0xx0:xxx0:0a0x:x00x:bx0x:xxfx:00xx:x0xx:0xxx:xxxx:,
            1248:x309:0x60:xx00:50x0:x0xd:7xx0:xxxf:0acx:xb0x:0xex:xx0x:00xx:x0xx:0xxx:xxxx:,
            1000:x300:0x60:xx70:02x0:x0x8:0xxe:xxx9:0a0x:x04x:0xcx:xx5x:d0xx:xfxx:bxxx:xxxx:,
            1248:x248:1x48:xx59:12x8:x6xc:5xxa:xxxf:1a4x:xa5x:3x6x:xxex:daxx:xbxx:7xxx:xxxx:,
            1248:x259:1x68:xx79:56x8:x2x9:5xxe:xxxf:92cx:xb4x:3x6x:xx5x:dexx:xaxx:bxxx:xxxx:,
            89b6:xda6:ex57:xx1d:e5xf:xcx3:2xx9:xxx3:e5bx:xc2x:4x7x:xx1x:0dxx:x8xx:9xxx:xxxx:,
            124x:0x5x:30xa:2x7x:x60x:x71d:x4xe:x53x:9acx:8bxx:x8e2:x9fx:dx8x:cxx5:xxa6:xxxx:,
            xx4x:035x:30xx:xxxb:5xxx:xxxd:742x:x53f:9xc0:xxx1:x8x2:a9xx:dex4:xx9x:xxa6:xxxx:">
          </cheerpj-applet></p>
        </div>
        <div class="puzzle-info">
            <p>Oskar's original puzzle is electro-mechanical and is driven
            by a micro-controller. The aim is to press down all the switches.
            The micro-controller can both pull down and push up switches
            using springs and four electromagnets. A photo is shown here
            on the left.</p>
            <p>In the applet version the challenge is to switch off four
            lights.</p>
            <p>Click the button to start and then select 
            your puzzle from the menu marked <i>Mazes</i>.</p>
        </div>
      </div>   
      <div class="page-note">
        <h3>The Rules</h3><p>
          <b>All OK:</b> is a training challenge. You can always push
          any button, which just clicks the associated light on and off.<br>
          <b>Wrong move reset:</b> is a simple four-move challenge. But
          one wrong move and you go back to the start.<br>
          <b>PIN code:</b> also has a four-move solution, but this time
          you do not get immediate feedback that you went down the wrong
          path. The maze forks like a tree, and just one &quot;leaf&quot;
          is the exit.<br>
          <b>Memory:</b> is a real memory test, requiring fifteen moves
          to solve, passing through all states. Again, one wrong move and
          you go back to the start.<br>
          <b>Deeper &amp; deeper:</b> is a <i>progressive</i> maze. As
          you switch a light off a maximum of one light will come back
          on giving you a feeling of progress through the maze. <br>
          <b>Four-Bit maze:</b> is a <i>non-progressive</i> maze. More
          than one light may come back on in this maze so it's harder to
          tell how well you're doing.<br>
          <b>No sense:</b> is even less progressive than <i>Four-Bit</i>,
          the change of lights is totally unrelated to the button that
          you push.<br>
          <b>Karnaugh:</b> is like walking through a Karnaugh diagram.
          As in <i>All OK</i> each button only affects its own light, and
          you can turn lights both off and on, but this time not all buttons
          will be enabled. <br>
          <b>One way: </b>is similar to <i>Karnaugh</i>. However once you
          have moved forward by pushing a button, the button will always
          be left disabled so you cannot simply reverse you last move to
          try different options.
        </p>
      </div>
      <hr>   
      <div class="page-credits"><p>
        <b>concept &amp; maze-design</b> - &COPY; Oskar van Deventer 2000-2001<br>
        <b>applet</b> - &COPY; Andrea Gilbert 2001<br>
        <!-- LT -->
        </p>
      </div>  
    </div>
  </body>
</html>
