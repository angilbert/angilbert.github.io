<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1">
    <title>Clickmazes</title>
    <link rel="stylesheet" href="../style2020.css?v=1.3">
  </head>
  <body>

    <div class="sidenav">
      <img src="../_site/site_cornersmall.gif">
      <p>
        <img src="../_site/logo_white.png" height="250px">
        <a href="../index.htm">home</a>
        <a href="../new-faq.htm">help</a>
      </p>
    </div>

    <div class="mainbody">
      <div class="page-intro">
        <h2>The Orientation maze</h2><p>
          The orientation mazes are multi-state
          arrow mazes where your choices at each move are dictated by your
          orientation and the symbols you can see directly ahead of you.
          In this maze 'you' are represented by a red pointer and the
          symbols in the maze are arrows that give you the option to move
          one square left, right, up or down, or rotate you ninety-degrees
          left or right.
        </p>
      </div>
      <div><p>
        The first set of puzzles are straight mazes with no
        obstacles. All mazes were produced by Jimmy Stephens's OrientExpress
        puzzle generator. Read more about OrientExpress below, or visit
        <a href="http://www.puzzlebeast.com/">www.puzzlebeast.com</a>
        to explore more of Jimmy's computer generated puzzles.</p>
      </div>

      <div class="std-flex-block">

        <div class="puzzle-area-legacy-applet">
          <applet width="300" height="300" archive="../jars/OMaze.jar" code="OMaze.class">
            <param name="class" value="OrientationMaze">
            <param name="puzzle0" value="35.E.DRCAUAULC.S.">
            <param name="title0" value="3x3 Warm-up [12]">
            <param name="puzzle1" value="35.E.RCLCAURUR.S.">
            <param name="title1" value="3x3 Warm-up [12]">
            <param name="puzzle2" value="46..E.CURCDLRDAUAACUCC.S..">
            <param name="title2" value="The Corridor [27]">
            <param name="puzzle3" value="46..E.RURDDLLDACUAUUCU.S..">
            <param name="title3" value="Turbulence [29]">
            <param name="puzzle4" value="46..E.DRRUDLCCAUDUALRU.S..">
            <param name="title4" value="Black Hole [27]">
            <param name="puzzle5" value="46..E.CURCULRDALLACURC.S..">
            <param name="title5" value="Edge Spin [29]">
            <param name="puzzle6" value="46..E.DUCURAALCCDUUURA.S..">
            <param name="title6" value="Sticky Corner [29]">
            <param name="puzzle7" value="46..E.UARCRLDLULCRAURL.S..">
            <param name="title7" value="Two Step [27]">
            <param name="puzzle8" value="46..E.RCDUUCLDRCALDUCU.S..">
            <param name="title8" value="The Wall [29]">
            <param name="puzzle9" value="46..E.ACRDULUCACRALULC.S..">
            <param name="title9" value="End Game [28]">
            <i><img src="eg1.png" width="200">
              <b>This is a JAVA applet. 
              <br>To run it you must install a 
              <br>suitable browser extension.
              <br>Please see the FAQ.</b></i>
         </applet>
        </div>

        <div class="puzzle-info">
          <h4>Goal</h4><p>
            Your challenge is to negotiate the red arrow from the bottom
            to the top square.</p>
          <h4>Controls</h4><p>
            Click on <b>top corner arrows</b> to select a new maze.<br>
            Click on <b>bottom right arrows</b> to undo/redo moves.<br>
            Click and hold on the red pointer to peek underneath it.
            </p>
          <h4>Movement</h4><p>
            Click on a highlighted square to move or rotate the red pointer.
            Only squares immediately infront of the pointer are highlighted.
            Clicking on a rotation symbol will cause a quarter turn.
          </p>
          <h4>Keys</h4><p>
            <b>u</b> - undo last move<br>
            <b>r</b> - redo last undone move
          </p>
        </div>
      </div>   
      <div><p>
        The second set of puzzles below include one or more blue obstacles
        called 'switchers', which hide one symbol from view and will
        switch places with the red pointer if the pointer is pushed onto
        the same square. Thus the switcher is a moveable obstacle. The
        switcher hugely increases the number of possible states in the
        maze and thus the average length of solution. These challenges
        were all created by OrientExpress puzzle generator. </p>
      </div>
      <div class="std-flex-block">

        <div class="puzzle-area-legacy-applet">
          <applet width="300" height="300" 
          archive="../jars/OMaze.jar" code="OMaze.class">
            <param name="class" value="OrientationMaze">
            <param name="puzzle0" value="35.E.DLCCUARRU.S.S02">
            <param name="title0" value="16 moves">
            <param name="puzzle1" value="46..E.RRRUDLLLALCCCUCU.S..S03">
            <param name="title1" value="63 moves">
            <param name="puzzle2" value="46..E.RCDLDCCRDACLAUUL.S..S01">
            <param name="title2" value="54 moves">
            <param name="puzzle3" value="46..E.UAUDRCLLUALAAUCU.S..S13">
            <param name="title3" value="51 moves">
            <param name="puzzle4" value="46..E.DUDLCARURRCULUCU.S..S33">
            <param name="title4" value="81 moves">
            <param name="puzzle5" value="46..E.LDRDCLRAARURDULR.S..S12">
            <param name="title5" value="82 moves">
            <param name="puzzle6" value="46..E.RUDUURRAALDLDUAD.S..S01S11">
            <param name="title6" value="41 moves">
            <param name="puzzle7" value="46..E.DURDRCLAACULULUD.S..S02S12">
            <param name="title7" value="38 moves">
            <param name="puzzle8" value="46..E.RDCDRADAACUCUULC.S..S11S22">
            <param name="title8" value="50 moves">
            <param name="puzzle9" value="46..E.UDRDDRDAALCUDUAL.S..S01S32">
            <param name="title9" value="69 moves">
            <param name="puzzle10" value="46..E.DRCDRUDLCCAURDUL.S..S11S23">
            <param name="title10" value="78 moves">
            <param name="puzzle11" value="46..E.RLUACALDARUDUURA.S..S04S12">
            <param name="title11" value="62 moves">
            <param name="puzzle12" value="46..E.UALDUARCDLCLRUUL.S..S01S11S33">
            <param name="title12" value="45 moves">
            <param name="puzzle13" value="46..E.RARDRCCLRUALUUUL.S..S04S14S24S34">
            <param name="title13" value="30 moves">
            <param name="puzzle14" value="46..E.DCLDCACCRAUCUULU.S..S12S13S22S23">
            <param name="title14" value="34 moves">
            <param name="puzzle15" value="46..E.DRCURUALCDURRCUL.S..S01S04S34">
            <param name="title15" value="54 moves">
            <param name="puzzle16" value="46..E.DLLLRRRURRCCDUUL.S..S03S13S23S33">
            <param name="title16" value="104 moves">
            <param name="puzzle17" value="46..E.DRRDAAALCRCLUUUL.S..S03S12">
            <param name="title17" value="144 moves">
            <param name="puzzle18" value="46..E.DRCLUDALDUCUULUC.S..S21S31S33">
            <param name="title18" value="188 moves">
            <i><img src="eg2.png" width="200">
              <b>This is a JAVA applet. 
              <br>To run it you must install a 
              <br>suitable browser extension.
              <br>Please see the FAQ.</b></i>
        </applet>
        </div>

        <div class="puzzle-info">
          <h4>Goal</h4><p>
            Your challenge is to negotiate the red arrow from the bottom
            to the top square.</p>
          <h4>Controls</h4><p>
            Click on <b>top corner arrows</b> to select a new maze.<br>
            Click on <b>bottom right arrows</b> to undo/redo moves.<br>
            Click and hold on the blue-switcher or red pointer to peek underneath it.
            </p>
          <h4>Movement</h4><p>
            Click on a highlighted square to move or rotate the red pointer.
            The blue switcher acts as an obstacle, hiding one square. The
            red pointer and blue switcher will swap places if the red pointer
            is pushed onto a square occupied by a blue switcher.
          </p>
          <h4>Keys</h4><p>
            <b>u</b> - undo last move<br>
            <b>r</b> - redo last undone move
          </p>
        </div>
      </div> 
      <div class="page-note"><p>  
        <h3>Background</h3>
        <p>
          The only hand-crafted orientation maze initially created
          is one I devised for G4G5 in Atlanta in April 2002.
          <!-- You can find the original maze <a href="new-g4g5.htm">here</a>. -->
          It was not until I saw the results of OrientExpress however that
          I realised just how much complexity and variety was possible
          on a 4x4 grid. Infact no O-maze featured on these pages is any
          larger than 4x4, which is remarkable considering most of my other
          puzzles start at 5x5. It turns out O-maze works best on 4x4,
          5x5 works reasonably well too but there is little gain in complexity
          and with anything larger than 5x5 the maze-like behaviour begins
          to breakdown (due to having too many options at each turn). The
          O-maze is a good example of just how small and complex a multi-state
          maze can be.</p>

          <h3>Notes from the Author</h3><p>
          
          The OrientExpress program for
          generating orientation mazes was written with the benefit of
          the experience gained from developing SwampBeast, the plank puzzle
          generator 
          (see <a href="http://www.puzzlebeast.com/">www.puzzlebeast.com</a>).
          Although the two types of puzzles are very different, the routines
          used for the puzzle solver module and for the random generation
          and mutation modules are quite similar between the two programs.</p>
          <p>
          <img src="express.gif" width="340" style="float:right; padding:5px">
          A screen-shot of an early version of OrientExpress is shown
          on the right. As with SwampBeast, this program creates puzzles
          first by randomly generating a large number of mazes, saving
          only the ones which look the most promising. The top candidates
          are then subjected to random mutations, again saving only the
          best puzzles. The puzzles posted above typically resulted from
          several tens of thousands of random generation steps, followed
          by a similar number of random mutation steps.</p>
      
          <p>To identify 'promising' puzzles, a method is needed for scoring
          puzzles once they are created. Ideally, this score should be
          an estimate of how difficult and/or fun the maze is to solve.
          Since the basic mechanics for puzzle creation and solving had
          already been developed for SwampBeast, much of the challenge
          in developing OrientExpress came in finding a good scoring metric.</p>
      
          <p>The puzzles created early on were simpler in that they did
          not have switchers, and the length of the solution path was used
          as the sole measure for scoring these puzzles. However, when
          the switchers were added, scoring became more complicated. With
          switchers it became possible for the solution path to have repetitive
          loops in it, a feature you will notice in many of the puzzles.
          (For example, see puzzle #2 in the second set of puzzles above.)
          In fact, virtually all of the switcher puzzles OrientExpress
          initially produced proved to be very long, and very, very repetitive.
          Solving a few puzzles of this type was fun, but after solving
          a couple of dozen of them, the repetitive nature became a colossal
          drag.</p>
      
          <p>So, new scoring methods were tested in an effort to bump OrientExpress
          out of it's loopiness. After some trial and error, the most successful
          metric proved to be one I call Entropy Scoring. It is based on
          the assumption that solution paths with high entropy will have
          more unexpected twists and turns, and will therefore be more
          interesting and difficult. (See puzzles #1, 3, 8-11, 13-16, in
          second set of puzzles above for puzzles created using Entropy
          Scoring.) In practice, mazes generated using this metric proved
          to be much less repetitive, and do in fact seem to be more difficult
          to solve for a given solution length.</p>
      </div>
      <hr>   
      <div class="page-credits"><p>
        <b>concept</b> - &COPY; Andrea Gilbert 2002<br>
        <b>applet &amp; maze designs</b> - &COPY; James Stephens 2002<br>
        <b>hosted with permission from James Stephens</b><br>
        </p>
      </div>  
    </div>
  
  </body>
</html>
